[{
	access: [APublic]
	doc: null
	kind: FFun({
		args: [{
			meta: null
			name: __coco_data_
			opt: false
			type: TAnonymous([{
				access: null
				doc: null
				kind: FVar(TPath({
					name: Variable
					pack: [coconut, data]
					params: [TPType(null <- expected enum value)]
					sub: null
				}), null)
				meta: []
				name: bi
				pos: #pos
			}])
			value: null
		}, {
			meta: null
			name: implicits
			opt: true
			type: TPath({
				name: ImplicitContext
				pack: [coconut, ui, internal]
				params: []
				sub: null
			})
			value: null
		}]
		expr: {
			expr: EBlock([{
				expr: EBlock([])
				pos: #pos
			}, {
				expr: EBinop(OpAssign, {
					expr: EConst(CIdent(_coco_implicits))
					pos: #pos
				}, {
					expr: EConst(CIdent(implicits))
					pos: #pos
				})
				pos: #pos
			}, {
				expr: EBlock([{
					expr: ECall({
						expr: EField({
							expr: EConst(CIdent(this))
							pos: #pos
						}, __initAttributes)
						pos: #pos
					}, [{
						expr: EConst(CIdent(__coco_data_))
						pos: #pos
					}])
					pos: #pos
				}, {
					expr: EVars([{
						expr: {
							expr: EConst(CIdent(null))
							pos: #pos
						}
						isFinal: false
						meta: []
						name: snapshot
						type: null
					}])
					pos: #pos
				}, {
					expr: ECall({
						expr: EConst(CIdent(super))
						pos: #pos
					}, [{
						expr: EFunction(FArrow, {
							args: []
							expr: {
								expr: EMeta({
									name: :implicitReturn
									params: []
									pos: #pos
								}, {
									expr: EReturn({
										expr: ECall({
											expr: EConst(CIdent(render))
											pos: #pos
										}, [])
										pos: #pos
									})
									pos: #pos
								})
								pos: #pos
							}
							params: []
							ret: null
						})
						pos: #pos
					}, {
						expr: EConst(CIdent(null))
						pos: #pos
					}, {
						expr: EConst(CIdent(null))
						pos: #pos
					}, {
						expr: EConst(CIdent(null))
						pos: #pos
					}, {
						expr: EConst(CIdent(null))
						pos: #pos
					}])
					pos: #pos
				}, {
					expr: ESwitch({
						expr: EParenthesis({
							expr: EConst(CIdent(null))
							pos: #pos
						})
						pos: #pos
					}, [{
						expr: null
						guard: null
						values: [{
							expr: EConst(CIdent(null))
							pos: #pos
						}]
					}, {
						expr: {
							expr: EBlock([{
								expr: ECall({
									expr: EConst(CIdent(beforeUnmounting))
									pos: #pos
								}, [{
									expr: EConst(CIdent(v))
									pos: #pos
								}])
								pos: #pos
							}])
							pos: #pos
						}
						guard: null
						values: [{
							expr: EConst(CIdent(v))
							pos: #pos
						}]
					}], null)
					pos: #pos
				}])
				pos: #pos
			}])
			pos: #pos
		}
		params: []
		ret: TPath({
			name: Void
			pack: []
			params: []
			sub: null
		})
	})
	meta: null
	name: new
	pos: #pos
}, {
	access: []
	doc: null
	kind: FProp(get, set, null, null)
	meta: [{
		name: :controlled
		params: []
		pos: #pos
	}]
	name: bi
	pos: #pos
}, {
	access: [AInline]
	doc: null
	kind: FFun({
		args: []
		expr: {
			expr: EReturn({
				expr: EField({
					expr: EField({
						expr: EConst(CIdent(this))
						pos: #pos
					}, __coco_bi)
					pos: #pos
				}, value)
				pos: #pos
			})
			pos: #pos
		}
		params: []
		ret: null
	})
	meta: []
	name: get_bi
	pos: #pos
}, {
	access: null
	doc: null
	kind: FFun({
		args: [{
			meta: null
			name: param
			opt: false
			type: null
			value: null
		}]
		expr: {
			expr: EBlock([{
				expr: ESwitch({
					expr: EMeta({
						name: :privateAccess
						params: []
						pos: #pos
					}, {
						expr: EField({
							expr: EField({
								expr: EConst(CIdent(this))
								pos: #pos
							}, __coco_bi)
							pos: #pos
						}, data)
						pos: #pos
					})
					pos: #pos
				}, [{
					expr: null
					guard: null
					values: [{
						expr: EConst(CIdent(null))
						pos: #pos
					}]
				}, {
					expr: {
						expr: EBlock([{
							expr: ECall({
								expr: EField({
									expr: EConst(CIdent(v))
									pos: #pos
								}, set)
								pos: #pos
							}, [{
								expr: EConst(CIdent(param))
								pos: #pos
							}])
							pos: #pos
						}])
						pos: #pos
					}
					guard: null
					values: [{
						expr: EConst(CIdent(v))
						pos: #pos
					}]
				}], null)
				pos: #pos
			}, {
				expr: EReturn({
					expr: EConst(CIdent(param))
					pos: #pos
				})
				pos: #pos
			}])
			pos: #pos
		}
		params: []
		ret: null
	})
	meta: []
	name: set_bi
	pos: #pos
}, {
	access: null
	doc: null
	kind: FFun({
		args: [{
			meta: null
			name: attributes
			opt: false
			type: TAnonymous([{
				access: null
				doc: null
				kind: FVar(TPath({
					name: Variable
					pack: [coconut, data]
					params: [TPType(null <- expected enum value)]
					sub: null
				}), null)
				meta: []
				name: bi
				pos: #pos
			}])
			value: null
		}]
		expr: {
			expr: EBlock([])
			pos: #pos
		}
		params: []
		ret: null
	})
	meta: [{
		name: :noCompletion
		params: []
		pos: #pos
	}]
	name: __initAttributes
	pos: #pos
}, {
	access: [AStatic]
	doc: null
	kind: FProp(get, null, null, {
		expr: EConst(CIdent(null))
		pos: #pos
	})
	meta: [{
		name: :noCompletion
		params: []
		pos: #pos
	}]
	name: __factory
	pos: #pos
}, {
	access: [AStatic, AInline]
	doc: null
	kind: FFun({
		args: []
		expr: {
			expr: EReturn({
				expr: ESwitch({
					expr: EConst(CIdent(__factory))
					pos: #pos
				}, [{
					expr: {
						expr: EBlock([{
							expr: EBinop(OpAssign, {
								expr: EConst(CIdent(__factory))
								pos: #pos
							}, {
								expr: ENew({
									name: WidgetFactory
									pack: [coconut, diffing, internal]
									params: []
									sub: null
								}, [{
									expr: EField({
										expr: EConst(CIdent(ControlledTest))
										pos: #pos
									}, new)
									pos: #pos
								}, {
									expr: EFunction(FAnonymous, {
										args: [{
											meta: null
											name: v
											opt: false
											type: null
											value: null
										}, {
											meta: null
											name: attr
											opt: false
											type: null
											value: null
										}]
										expr: {
											expr: ECall({
												expr: EField({
													expr: EConst(CIdent(v))
													pos: #pos
												}, __initAttributes)
												pos: #pos
											}, [{
												expr: EConst(CIdent(attr))
												pos: #pos
											}])
											pos: #pos
										}
										params: []
										ret: null
									})
									pos: #pos
								}])
								pos: #pos
							})
							pos: #pos
						}])
						pos: #pos
					}
					guard: null
					values: [{
						expr: EConst(CIdent(null))
						pos: #pos
					}]
				}, {
					expr: {
						expr: EBlock([{
							expr: EConst(CIdent(v))
							pos: #pos
						}])
						pos: #pos
					}
					guard: null
					values: [{
						expr: EConst(CIdent(v))
						pos: #pos
					}]
				}], null)
				pos: #pos
			})
			pos: #pos
		}
		params: []
		ret: null
	})
	meta: [{
		name: :noCompletion
		params: []
		pos: #pos
	}]
	name: get___factory
	pos: #pos
}, {
	access: [AStatic, APublic]
	doc: null
	kind: FFun({
		args: [{
			meta: null
			name: hxxMeta
			opt: false
			type: TAnonymous([{
				access: null
				doc: null
				kind: FProp(default, never, TPath({
					name: Key
					pack: [coconut, diffing]
					params: []
					sub: null
				}), null)
				meta: [{
					name: :optional
					params: []
					pos: #pos
				}]
				name: key
				pos: #pos
			}, {
				access: null
				doc: null
				kind: FProp(default, never, TPath({
					name: Ref
					pack: [coconut, ui]
					params: [TPType(TPath({
						name: ControlledTest
						pack: []
						params: []
						sub: null
					}))]
					sub: null
				}), null)
				meta: [{
					name: :optional
					params: []
					pos: #pos
				}]
				name: ref
				pos: #pos
			}])
			value: null
		}, {
			meta: null
			name: attributes
			opt: false
			type: TAnonymous([{
				access: null
				doc: null
				kind: FVar(TPath({
					name: Variable
					pack: [coconut, data]
					params: [TPType(null <- expected enum value)]
					sub: null
				}), null)
				meta: []
				name: bi
				pos: #pos
			}])
			value: null
		}]
		expr: {
			expr: EReturn({
				expr: ENew({
					name: VWidget
					pack: [coconut, diffing, internal]
					params: []
					sub: null
				}, [{
					expr: EConst(CIdent(__factory))
					pos: #pos
				}, {
					expr: EConst(CIdent(attributes))
					pos: #pos
				}, {
					expr: EField({
						expr: EConst(CIdent(hxxMeta))
						pos: #pos
					}, key)
					pos: #pos
				}, {
					expr: EField({
						expr: EConst(CIdent(hxxMeta))
						pos: #pos
					}, ref)
					pos: #pos
				}])
				pos: #pos
			})
			pos: #pos
		}
		params: []
		ret: TPath({
			name: RenderResult
			pack: [coconut, vdom]
			params: []
			sub: null
		})
	})
	meta: null
	name: fromHxx
	pos: #pos
}]
line 15: expected enum value
line 290: expected enum value
line 484: expected enum value